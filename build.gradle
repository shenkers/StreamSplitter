/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
	id 'groovy'
	id 'idea'
	id 'net.researchgate.release' version '2.6.0'
	id 'application'

	id 'com.github.johnrengelman.shadow' version '7.1.2' apply false

}

mainClassName = 'shenkerbfx.StreamSplitter.Application'

apply plugin: 'com.github.johnrengelman.shadow'

group = 'shenkerbfx'
artifact = 'StreamSplitter'
description = 'Splits an input stream into a specified number of output files'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
   mavenCentral()
   mavenLocal()
}

configurations.all*.exclude module: "log4j-slf4j-impl"

dependencies {
	implementation platform('org.apache.groovy:groovy-bom:4.0.5')
	implementation 'org.apache.groovy:groovy'
	implementation 'org.apache.groovy:groovy-json'
	testImplementation platform("org.spockframework:spock-bom:2.3-groovy-4.0")
	testImplementation "org.spockframework:spock-core"
	implementation 'org.slf4j:slf4j-api:1.7.25'
	implementation group: 'org.slf4j', name:'slf4j-simple', version: '1.7.2'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.22'
    implementation 'info.picocli:picocli:4.3.1'
}

sourceSets {
	main {
		java {
			srcDirs = [ 'src/main/java' ]
		}
		resources {
			srcDirs = [ 'src/main/resources' ]
		}
	}
}

apply plugin: 'maven-publish'

publishing {
    publications {
        shadowJar(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId = project.group
            artifactId = project.artifact
            version = project.version
        }
    }
}

release {
        failOnUnversionedFiles = false
        failOnSnapshotDependencies = false
        git {
            requireBranch = 'main'
            pushTags = true
        }
}

afterReleaseBuild.dependsOn publish


shadowJar {
    minimize {
        exclude(dependency('org.codehaus.groovy:.*:.*'))
        exclude(dependency('org.apache.groovy:.*:.*'))
    }
	zip64 = true
        destinationDir = project.buildDir
        appendix = null
        version = null
        classifier = null
        mainClassName = mainClassName
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs += ['src/main/java'] }
    }
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
